package br.iteratorsystems.cps.entities;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import br.iteratorsystems.cps.interfaces.EntityAble;

/**
 * Produto generated by hbm2java
 */
@Entity
@Table(name="produto"
    ,schema="tabelas"
)
public class PRODUTO implements java.io.Serializable, EntityAble {

	 private static final long serialVersionUID = 2396720478904300397L;
	 
	 private PRODUTOID id;
     private LOJA loja;
     private String descricao;
     private String unidadeMedida;
     private String embalagem;
     private char status;
     private Set<PRECO> precos = new HashSet<PRECO>(0);

    public PRODUTO() {
    }

	
    public PRODUTO(PRODUTOID id, LOJA loja, String descricao, char status) {
        this.id = id;
        this.loja = loja;
        this.descricao = descricao;
        this.status = status;
    }
    public PRODUTO(PRODUTOID id, LOJA loja, String descricao, String unidadeMedida, String embalagem, char status, Set<PRECO> precos) {
       this.id = id;
       this.loja = loja;
       this.descricao = descricao;
       this.unidadeMedida = unidadeMedida;
       this.embalagem = embalagem;
       this.status = status;
       this.precos = precos;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="codigoBarras", column=@Column(name="codigo_barras", nullable=false, length=20) ), 
        @AttributeOverride(name="idLoja", column=@Column(name="id_loja", nullable=false) ), 
        @AttributeOverride(name="idRede", column=@Column(name="id_rede", nullable=false) ) } )
    public PRODUTOID getId() {
        return this.id;
    }
    
    public void setId(PRODUTOID id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="id_loja", referencedColumnName="id_loja", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="id_rede", referencedColumnName="id_rede", nullable=false, insertable=false, updatable=false) } )
    public LOJA getLoja() {
        return this.loja;
    }
    
    public void setLoja(LOJA loja) {
        this.loja = loja;
    }
    
    @Column(name="descricao", nullable=false, length=60)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }
    
    @Column(name="unidade_medida", length=3)
    public String getUnidadeMedida() {
        return this.unidadeMedida;
    }
    
    public void setUnidadeMedida(String unidadeMedida) {
        this.unidadeMedida = unidadeMedida;
    }
    
    @Column(name="embalagem", length=20)
    public String getEmbalagem() {
        return this.embalagem;
    }
    
    public void setEmbalagem(String embalagem) {
        this.embalagem = embalagem;
    }
    
    @Column(name="status", nullable=false, length=1)
    public char getStatus() {
        return this.status;
    }
    
    public void setStatus(char status) {
        this.status = status;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="produto")
    public Set<PRECO> getPrecos() {
        return this.precos;
    }
    
    public void setPrecos(Set<PRECO> precos) {
        this.precos = precos;
    }


	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((descricao == null) ? 0 : descricao.hashCode());
		result = prime * result
				+ ((embalagem == null) ? 0 : embalagem.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((loja == null) ? 0 : loja.hashCode());
		result = prime * result + status;
		result = prime * result
				+ ((unidadeMedida == null) ? 0 : unidadeMedida.hashCode());
		return result;
	}


	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof PRODUTO)) {
			return false;
		}
		PRODUTO other = (PRODUTO) obj;
		if (descricao == null) {
			if (other.descricao != null) {
				return false;
			}
		} else if (!descricao.equals(other.descricao)) {
			return false;
		}
		if (embalagem == null) {
			if (other.embalagem != null) {
				return false;
			}
		} else if (!embalagem.equals(other.embalagem)) {
			return false;
		}
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		if (loja == null) {
			if (other.loja != null) {
				return false;
			}
		} else if (!loja.equals(other.loja)) {
			return false;
		}
		if (status != other.status) {
			return false;
		}
		if (unidadeMedida == null) {
			if (other.unidadeMedida != null) {
				return false;
			}
		} else if (!unidadeMedida.equals(other.unidadeMedida)) {
			return false;
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "PRODUTO [descricao=" + descricao + ", embalagem=" + embalagem
				+ ", id=" + id + ", loja=" + loja + ", status=" + status
				+ ", unidadeMedida=" + unidadeMedida + "]";
	}

}