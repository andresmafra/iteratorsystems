package br.iteratorsystems.cps.entities;

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.iteratorsystems.cps.interfaces.EntityAble;

/**
 * Endereco generated by hbm2java
 * 
 */
@Entity
@Table(name = "endereco", schema = "tabelas")
public class ENDERECO implements java.io.Serializable, EntityAble {

	private static final long serialVersionUID = 2680669957284375254L;
	private ENDERECOID id;
	private CEP cep;
	private USUARIO usuario;
	private String pais;
	private String estado;
	private String cidade;
	private String bairro;
	private String logradouro;
	private String numero;
	private String complemento;
	private Date dataultimamodificacao;

	public ENDERECO() {
	}

	public ENDERECO(ENDERECOID id, CEP cep, USUARIO usuario, String pais,
			String estado, String cidade, String bairro, String logradouro,
			String numero, Date dataultimamodificacao) {
		this.id = id;
		this.cep = cep;
		this.usuario = usuario;
		this.pais = pais;
		this.estado = estado;
		this.cidade = cidade;
		this.bairro = bairro;
		this.logradouro = logradouro;
		this.numero = numero;
		this.dataultimamodificacao = dataultimamodificacao;
	}

	public ENDERECO(ENDERECOID id, CEP cep, USUARIO usuario, String pais,
			String estado, String cidade, String bairro, String logradouro,
			String numero, String complemeto, Date dataultimamodificacao) {
		this.id = id;
		this.cep = cep;
		this.usuario = usuario;
		this.pais = pais;
		this.estado = estado;
		this.cidade = cidade;
		this.bairro = bairro;
		this.logradouro = logradouro;
		this.numero = numero;
		this.complemento = complemeto;
		this.dataultimamodificacao = dataultimamodificacao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "idEndereco", column = @Column(name = "id_endereco", nullable = false)),
			@AttributeOverride(name = "idUsuario", column = @Column(name = "id_usuario", nullable = false)) })
	public ENDERECOID getId() {
		return this.id;
	}

	public void setId(ENDERECOID id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cep", nullable = false)
	public CEP getCep() {
		return this.cep;
	}

	public void setCep(CEP cep) {
		this.cep = cep;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario", nullable = false, insertable = false, updatable = false)
	public USUARIO getUsuario() {
		return this.usuario;
	}

	public void setUsuario(USUARIO usuario) {
		this.usuario = usuario;
	}

	@Column(name = "pais", nullable = false, length = 50)
	public String getPais() {
		return this.pais;
	}

	public void setPais(String pais) {
		this.pais = pais;
	}

	@Column(name = "estado", nullable = false, length = 2)
	public String getEstado() {
		return this.estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@Column(name = "cidade", nullable = false, length = 50)
	public String getCidade() {
		return this.cidade;
	}

	public void setCidade(String cidade) {
		this.cidade = cidade;
	}

	@Column(name = "bairro", nullable = false, length = 50)
	public String getBairro() {
		return this.bairro;
	}

	public void setBairro(String bairro) {
		this.bairro = bairro;
	}

	@Column(name = "logradouro", nullable = false, length = 50)
	public String getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(String logradouro) {
		this.logradouro = logradouro;
	}

	@Column(name = "numero", nullable = false, length = 6)
	public String getNumero() {
		return this.numero;
	}

	public void setNumero(String numero) {
		this.numero = numero;
	}

	@Column(name = "complemeto", length = 20)
	public String getComplemento() {
		return this.complemento;
	}

	public void setComplemento(String complemento) {
		this.complemento = complemento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataultimamodificacao", nullable = false, length = 13)
	public Date getDataultimamodificacao() {
		return this.dataultimamodificacao;
	}

	public void setDataultimamodificacao(Date dataultimamodificacao) {
		this.dataultimamodificacao = dataultimamodificacao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bairro == null) ? 0 : bairro.hashCode());
		result = prime * result + ((cidade == null) ? 0 : cidade.hashCode());
		result = prime * result
				+ ((complemento == null) ? 0 : complemento.hashCode());
		result = prime
				* result
				+ ((dataultimamodificacao == null) ? 0 : dataultimamodificacao
						.hashCode());
		result = prime * result + ((estado == null) ? 0 : estado.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((logradouro == null) ? 0 : logradouro.hashCode());
		result = prime * result + ((numero == null) ? 0 : numero.hashCode());
		result = prime * result + ((pais == null) ? 0 : pais.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof ENDERECO))
			return false;
		ENDERECO other = (ENDERECO) obj;
		if (bairro == null) {
			if (other.bairro != null)
				return false;
		} else if (!bairro.equals(other.bairro))
			return false;
		if (cidade == null) {
			if (other.cidade != null)
				return false;
		} else if (!cidade.equals(other.cidade))
			return false;
		if (complemento == null) {
			if (other.complemento != null)
				return false;
		} else if (!complemento.equals(other.complemento))
			return false;
		if (dataultimamodificacao == null) {
			if (other.dataultimamodificacao != null)
				return false;
		} else if (!dataultimamodificacao.equals(other.dataultimamodificacao))
			return false;
		if (estado == null) {
			if (other.estado != null)
				return false;
		} else if (!estado.equals(other.estado))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (logradouro == null) {
			if (other.logradouro != null)
				return false;
		} else if (!logradouro.equals(other.logradouro))
			return false;
		if (numero == null) {
			if (other.numero != null)
				return false;
		} else if (!numero.equals(other.numero))
			return false;
		if (pais == null) {
			if (other.pais != null)
				return false;
		} else if (!pais.equals(other.pais))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ENDERECO [bairro=" + bairro + ", cidade=" + cidade
				+ ", complemeto=" + complemento + ", dataultimamodificacao="
				+ dataultimamodificacao + ", estado=" + estado + ", id=" + id
				+ ", logradouro=" + logradouro + ", numero=" + numero
				+ ", pais=" + pais + "]";
	}
}
