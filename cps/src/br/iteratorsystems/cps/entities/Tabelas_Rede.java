package br.iteratorsystems.cps.entities;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.iteratorsystems.cps.interfaces.EntityAble;

/**
 * Rede generated by hbm2java
 */
@Entity
@Table(name = "rede", schema = "tabelas")
public class Tabelas_Rede implements java.io.Serializable, EntityAble {

	private static final long serialVersionUID = 3951762454780488997L;

	private Integer id;
	private String nome;
	private Date dataultimamodificacao;
	private Set<Tabelas_Loja> lojas = new HashSet<Tabelas_Loja>(0);

	public Tabelas_Rede() {
	}

	public Tabelas_Rede(Integer idRede, String nome, Date dataultimamodificacao) {
		this.id = idRede;
		this.nome = nome;
		this.dataultimamodificacao = dataultimamodificacao;
	}

	public Tabelas_Rede(Integer idRede, String nome, Date dataultimamodificacao,
			Set<Tabelas_Loja> lojas) {
		this.id = idRede;
		this.nome = nome;
		this.dataultimamodificacao = dataultimamodificacao;
		this.lojas = lojas;
	}

	@Id
	@Column(name = "id_rede", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer idRede) {
		this.id = idRede;
	}

	@Column(name = "nome", nullable = false, length = 30)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome.toUpperCase();
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataultimamodificacao", nullable = false, length = 13)
	public Date getDataultimamodificacao() {
		return this.dataultimamodificacao;
	}

	public void setDataultimamodificacao(Date dataultimamodificacao) {
		this.dataultimamodificacao = dataultimamodificacao;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "rede")
	public Set<Tabelas_Loja> getLojas() {
		return this.lojas;
	}

	public void setLojas(Set<Tabelas_Loja> lojas) {
		this.lojas = lojas;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((dataultimamodificacao == null) ? 0 : dataultimamodificacao
						.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((nome == null) ? 0 : nome.hashCode());
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Tabelas_Rede)) {
			return false;
		}
		Tabelas_Rede other = (Tabelas_Rede) obj;
		if (dataultimamodificacao == null) {
			if (other.dataultimamodificacao != null) {
				return false;
			}
		} else if (!dataultimamodificacao.equals(other.dataultimamodificacao)) {
			return false;
		}
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		if (nome == null) {
			if (other.nome != null) {
				return false;
			}
		} else if (!nome.equals(other.nome)) {
			return false;
		}
		return true;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "Tabelas_Rede [dataultimamodificacao=" + dataultimamodificacao
				+ ", idRede=" + id + ", nome=" + nome + "]";
	}

}