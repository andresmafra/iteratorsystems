package br.iteratorsystems.cps.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import br.iteratorsystems.cps.interfaces.EntityAble;

/**
 * Login generated by hbm2java
 */
@Entity
@Table(name = "login", schema = "tabelas", uniqueConstraints = @UniqueConstraint(columnNames = "nome_login"))
public class LOGIN implements java.io.Serializable, EntityAble {

	private static final long serialVersionUID = 7263774640282848776L;

	private Integer idLogin;
	private USUARIO usuario;
	private String nomeLogin;
	private String senha;
	private char tipoUsuario;

	public LOGIN() {
	}

	public LOGIN(Integer idLogin, USUARIO usuario, String nomeLogin,
			String senha, char tipoUsuario) {
		this.idLogin = idLogin;
		this.usuario = usuario;
		this.nomeLogin = nomeLogin;
		this.senha = senha;
		this.tipoUsuario = tipoUsuario;
	}

	@Id
	@Column(name = "id_login", unique = true, nullable = false)
	public Integer getIdLogin() {
		return this.idLogin;
	}

	public void setIdLogin(Integer idLogin) {
		this.idLogin = idLogin;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_login", unique = true, nullable = false, insertable = false, updatable = false)
	public USUARIO getUsuario() {
		return this.usuario;
	}

	public void setUsuario(USUARIO usuario) {
		this.usuario = usuario;
	}

	@Column(name = "nome_login", unique = true, nullable = false, length = 30)
	public String getNomeLogin() {
		return this.nomeLogin;
	}

	public void setNomeLogin(String nomeLogin) {
		this.nomeLogin = nomeLogin;
	}

	@Column(name = "senha", nullable = false, length = 8)
	public String getSenha() {
		return this.senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	@Column(name = "tipo_usuario", nullable = false, length = 1)
	public char getTipoUsuario() {
		return this.tipoUsuario;
	}

	public void setTipoUsuario(char tipoUsuario) {
		this.tipoUsuario = tipoUsuario;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idLogin == null) ? 0 : idLogin.hashCode());
		result = prime * result
				+ ((nomeLogin == null) ? 0 : nomeLogin.hashCode());
		result = prime * result + ((senha == null) ? 0 : senha.hashCode());
		result = prime * result + tipoUsuario;
		result = prime * result + ((usuario == null) ? 0 : usuario.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof LOGIN))
			return false;
		LOGIN other = (LOGIN) obj;
		if (idLogin == null) {
			if (other.idLogin != null)
				return false;
		} else if (!idLogin.equals(other.idLogin))
			return false;
		if (nomeLogin == null) {
			if (other.nomeLogin != null)
				return false;
		} else if (!nomeLogin.equals(other.nomeLogin))
			return false;
		if (senha == null) {
			if (other.senha != null)
				return false;
		} else if (!senha.equals(other.senha))
			return false;
		if (tipoUsuario != other.tipoUsuario)
			return false;
		if (usuario == null) {
			if (other.usuario != null)
				return false;
		} else if (!usuario.equals(other.usuario))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "LOGIN [idLogin=" + idLogin + ", nomeLogin=" + nomeLogin
				+ ", senha=" + senha + ", tipoUsuario=" + tipoUsuario
				+ ", usuario=" + usuario + "]";
	}
}