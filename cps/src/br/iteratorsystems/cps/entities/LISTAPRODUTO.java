package br.iteratorsystems.cps.entities;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ListaProduto generated by hbm2java
 */
@Entity
@Table(name="lista_produto"
    ,schema="tabelas"
)
public class LISTAPRODUTO  implements java.io.Serializable {

	 private static final long serialVersionUID = 8790039664826383450L;
	 
	 private Integer idLista;
     private USUARIO usuario;
     private String nomeLista;
     private Date dataCriacao;
     private Set<LISTAPRODUTOITEM> listaProdutoItems = new HashSet<LISTAPRODUTOITEM>(0);

    public LISTAPRODUTO() {
    }

	
    public LISTAPRODUTO(Integer idLista, USUARIO usuario, String nomeLista, Date dataCriacao) {
        this.idLista = idLista;
        this.usuario = usuario;
        this.nomeLista = nomeLista;
        this.dataCriacao = dataCriacao;
    }
    public LISTAPRODUTO(Integer idLista, USUARIO usuario, String nomeLista, Date dataCriacao, Set<LISTAPRODUTOITEM> listaProdutoItems) {
       this.idLista = idLista;
       this.usuario = usuario;
       this.nomeLista = nomeLista;
       this.dataCriacao = dataCriacao;
       this.listaProdutoItems = listaProdutoItems;
    }
   
     @Id 
    @Column(name="id_lista", unique=true, nullable=false)
    public Integer getIdLista() {
        return this.idLista;
    }
    
    public void setIdLista(Integer idLista) {
        this.idLista = idLista;
    }
@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_usuario", nullable=false)
    public USUARIO getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(USUARIO usuario) {
        this.usuario = usuario;
    }
    
    @Column(name="nome_lista", nullable=false, length=30)
    public String getNomeLista() {
        return this.nomeLista;
    }
    
    public void setNomeLista(String nomeLista) {
        this.nomeLista = nomeLista;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="data_criacao", nullable=false, length=13)
    public Date getDataCriacao() {
        return this.dataCriacao;
    }
    
    public void setDataCriacao(Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="listaProduto")
    public Set<LISTAPRODUTOITEM> getListaProdutoItems() {
        return this.listaProdutoItems;
    }
    
    public void setListaProdutoItems(Set<LISTAPRODUTOITEM> listaProdutoItems) {
        this.listaProdutoItems = listaProdutoItems;
    }


	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((dataCriacao == null) ? 0 : dataCriacao.hashCode());
		result = prime * result + ((idLista == null) ? 0 : idLista.hashCode());
		result = prime * result
				+ ((nomeLista == null) ? 0 : nomeLista.hashCode());
		result = prime * result + ((usuario == null) ? 0 : usuario.hashCode());
		return result;
	}


	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof LISTAPRODUTO)) {
			return false;
		}
		LISTAPRODUTO other = (LISTAPRODUTO) obj;
		if (dataCriacao == null) {
			if (other.dataCriacao != null) {
				return false;
			}
		} else if (!dataCriacao.equals(other.dataCriacao)) {
			return false;
		}
		if (idLista == null) {
			if (other.idLista != null) {
				return false;
			}
		} else if (!idLista.equals(other.idLista)) {
			return false;
		}
		if (nomeLista == null) {
			if (other.nomeLista != null) {
				return false;
			}
		} else if (!nomeLista.equals(other.nomeLista)) {
			return false;
		}
		if (usuario == null) {
			if (other.usuario != null) {
				return false;
			}
		} else if (!usuario.equals(other.usuario)) {
			return false;
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "LISTAPRODUTO [dataCriacao=" + dataCriacao + ", idLista="
				+ idLista + ", nomeLista=" + nomeLista + ", usuario=" + usuario
				+ "]";
	}
}