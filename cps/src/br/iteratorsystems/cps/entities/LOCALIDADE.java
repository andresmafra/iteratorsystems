package br.iteratorsystems.cps.entities;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import br.iteratorsystems.cps.interfaces.EntityAble;

/**
 * Localidade generated by hbm2java
 */
@Entity
@Table(name="localidade"
    ,schema="tabelas"
)
public class LOCALIDADE  implements java.io.Serializable, EntityAble {


	 private static final long serialVersionUID = -1030682682618788019L;
	 private String idLocalidade;
     private String localidade;
     private String cepLocalidade;
     private String idSublocalidade;
     private String uf;
     private Set<CEP> ceps = new HashSet<CEP>(0);
     private Set<BAIRRO> bairros = new HashSet<BAIRRO>(0);

    public LOCALIDADE() {
    }

	
    public LOCALIDADE(String idLocalidade, String localidade, String cepLocalidade, String idSublocalidade, String uf) {
        this.idLocalidade = idLocalidade;
        this.localidade = localidade;
        this.cepLocalidade = cepLocalidade;
        this.idSublocalidade = idSublocalidade;
        this.uf = uf;
    }
    public LOCALIDADE(String idLocalidade, String localidade, String cepLocalidade, String idSublocalidade, String uf, Set<CEP> ceps, Set<BAIRRO> bairros) {
       this.idLocalidade = idLocalidade;
       this.localidade = localidade;
       this.cepLocalidade = cepLocalidade;
       this.idSublocalidade = idSublocalidade;
       this.uf = uf;
       this.ceps = ceps;
       this.bairros = bairros;
    }
   
     @Id 
    
    @Column(name="id_localidade", unique=true, nullable=false, length=6)
    public String getIdLocalidade() {
        return this.idLocalidade;
    }
    
    public void setIdLocalidade(String idLocalidade) {
        this.idLocalidade = idLocalidade;
    }
    
    @Column(name="localidade", nullable=false, length=60)
    public String getLocalidade() {
        return this.localidade;
    }
    
    public void setLocalidade(String localidade) {
        this.localidade = localidade;
    }
    
    @Column(name="cep_localidade", nullable=false, length=8)
    public String getCepLocalidade() {
        return this.cepLocalidade;
    }
    
    public void setCepLocalidade(String cepLocalidade) {
        this.cepLocalidade = cepLocalidade;
    }
    
    @Column(name="id_sublocalidade", nullable=false, length=6)
    public String getIdSublocalidade() {
        return this.idSublocalidade;
    }
    
    public void setIdSublocalidade(String idSublocalidade) {
        this.idSublocalidade = idSublocalidade;
    }
    
    @Column(name="uf", nullable=false, length=2)
    public String getUf() {
        return this.uf;
    }
    
    public void setUf(String uf) {
        this.uf = uf;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="localidade")
    public Set<CEP> getCeps() {
        return this.ceps;
    }
    
    public void setCeps(Set<CEP> ceps) {
        this.ceps = ceps;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="localidade")
    public Set<BAIRRO> getBairros() {
        return this.bairros;
    }
    
    public void setBairros(Set<BAIRRO> bairros) {
        this.bairros = bairros;
    }


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bairros == null) ? 0 : bairros.hashCode());
		result = prime * result
				+ ((cepLocalidade == null) ? 0 : cepLocalidade.hashCode());
		result = prime * result + ((ceps == null) ? 0 : ceps.hashCode());
		result = prime * result
				+ ((idLocalidade == null) ? 0 : idLocalidade.hashCode());
		result = prime * result
				+ ((idSublocalidade == null) ? 0 : idSublocalidade.hashCode());
		result = prime * result
				+ ((localidade == null) ? 0 : localidade.hashCode());
		result = prime * result + ((uf == null) ? 0 : uf.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof LOCALIDADE))
			return false;
		LOCALIDADE other = (LOCALIDADE) obj;
		if (bairros == null) {
			if (other.bairros != null)
				return false;
		} else if (!bairros.equals(other.bairros))
			return false;
		if (cepLocalidade == null) {
			if (other.cepLocalidade != null)
				return false;
		} else if (!cepLocalidade.equals(other.cepLocalidade))
			return false;
		if (ceps == null) {
			if (other.ceps != null)
				return false;
		} else if (!ceps.equals(other.ceps))
			return false;
		if (idLocalidade == null) {
			if (other.idLocalidade != null)
				return false;
		} else if (!idLocalidade.equals(other.idLocalidade))
			return false;
		if (idSublocalidade == null) {
			if (other.idSublocalidade != null)
				return false;
		} else if (!idSublocalidade.equals(other.idSublocalidade))
			return false;
		if (localidade == null) {
			if (other.localidade != null)
				return false;
		} else if (!localidade.equals(other.localidade))
			return false;
		if (uf == null) {
			if (other.uf != null)
				return false;
		} else if (!uf.equals(other.uf))
			return false;
		return true;
	}


	@Override
	public String toString() {
		return "LOCALIDADE [bairros=" + bairros + ", cepLocalidade="
				+ cepLocalidade + ", ceps=" + ceps + ", idLocalidade="
				+ idLocalidade + ", idSublocalidade=" + idSublocalidade
				+ ", localidade=" + localidade + ", uf=" + uf + "]";
	}
    
    
}