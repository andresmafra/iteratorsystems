package br.iteratorsystems.cps.entities;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

import br.iteratorsystems.cps.interfaces.EntityAble;

/**
 * ENDERECOID generated by hbm2java
 */
@Embeddable
public class ENDERECOID implements java.io.Serializable, EntityAble {

	private static final long serialVersionUID = -2195786669229991261L;
	
	private Integer idEndereco;
	private Integer idUsuario;

	public ENDERECOID() {}
	
	public ENDERECOID(Integer idUsuario) {
		this.idUsuario = idUsuario;
	}

	public ENDERECOID(Integer idEndereco, Integer idUsuario) {
		this.idEndereco = idEndereco;
		this.idUsuario = idUsuario;
	}

	@Column(name = "id_endereco", nullable = false)
	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="generatorEndereco")
	@SequenceGenerator(name="generatorEndereco",sequenceName="endereco_id_endereco_seq",initialValue=1,allocationSize=1)
	public Integer getIdEndereco() {
		return this.idEndereco;
	}

	public void setIdEndereco(int idEndereco) {
		this.idEndereco = idEndereco;
	}

	@Column(name = "id_usuario", nullable = false)
	public Integer getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(int idUsuario) {
		this.idUsuario = idUsuario;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof ENDERECOID))
			return false;
		ENDERECOID castOther = (ENDERECOID) other;

		return (this.getIdEndereco() == castOther.getIdEndereco())
				&& (this.getIdUsuario() == castOther.getIdUsuario());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getIdEndereco();
		result = 37 * result + this.getIdUsuario();
		return result;
	}

	@Override
	public String toString() {
		return "ENDERECOID [idEndereco=" + idEndereco + ", idUsuario="
				+ idUsuario + "]";
	}
	

}
